# Generated by Django 4.2.5 on 2023-12-18 13:59

import datetime
from django.db import migrations, models
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Eprints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='negative_clippings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='videos/')),
            ],
        ),
        migrations.CreateModel(
            name='news_obj',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Your Default Title', max_length=800)),
                ('description', models.TextField(blank=True, null=True)),
                ('published_date', models.CharField(blank=True, max_length=30, null=True)),
                ('url', models.URLField(blank=True, max_length=900, null=True)),
                ('main_text', models.TextField(blank=True, null=True)),
                ('summary_article', models.TextField(blank=True, null=True)),
                ('positive_sentence', models.TextField(blank=True, null=True)),
                ('neutral_sentence', models.TextField(blank=True, null=True)),
                ('negative_sentence', models.TextField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('clustered', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(default=datetime.datetime(2023, 12, 18, 13, 59, 21, 468848, tzinfo=datetime.timezone.utc))),
                ('source_type', models.CharField(choices=[('website', 'website'), ('youtube', 'youtube'), ('eprints', 'eprints'), ('others', 'others')], max_length=200)),
                ('source_name', models.CharField(blank=True, max_length=200, null=True)),
                ('source_url', models.CharField(blank=True, max_length=200, null=True)),
                ('link', models.CharField(blank=True, max_length=800, null=True)),
                ('published_time', models.CharField(blank=True, max_length=50, null=True)),
                ('is_positive', models.BooleanField(default=False)),
                ('is_latest', models.BooleanField(default=False)),
                ('views', models.CharField(blank=True, max_length=200, null=True)),
                ('thumbnail', models.CharField(blank=True, max_length=900, null=True)),
                ('published_time_ago', models.CharField(blank=True, max_length=200, null=True)),
                ('duration_of_video', models.CharField(blank=True, max_length=200, null=True)),
                ('channel_name', models.CharField(blank=True, max_length=500, null=True)),
                ('type_of_platform', models.CharField(blank=True, max_length=200, null=True)),
                ('POSITIVE', models.CharField(blank=True, max_length=255, null=True)),
                ('NEGATIVE', models.CharField(blank=True, max_length=255, null=True)),
                ('NEUTRAL', models.CharField(blank=True, max_length=255, null=True)),
                ('cluster_sentiment_analysis_result', models.CharField(blank=True, max_length=200, null=True)),
                ('sentiment_analysis', jsonfield.fields.JSONField(blank=True, null=True)),
                ('summary_json', jsonfield.fields.JSONField(blank=True, null=True)),
                ('youtube_negative_clippings', models.ManyToManyField(related_name='negative_clippings', to='newsgatherers.negative_clippings')),
            ],
        ),
        migrations.CreateModel(
            name='news_cluster_head',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Your Default Title', max_length=800)),
                ('description', models.TextField(blank=True, null=True)),
                ('published_date', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.URLField(blank=True, max_length=900, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('main_text', models.TextField(blank=True, null=True)),
                ('summary_article', models.TextField(blank=True, null=True)),
                ('positive_sentence', models.TextField(blank=True, null=True)),
                ('neutral_sentence', models.TextField(blank=True, null=True)),
                ('negative_sentence', models.TextField(blank=True, null=True)),
                ('published_time_ago', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('POSITIVE', models.CharField(blank=True, max_length=255, null=True)),
                ('NEUTRAL', models.CharField(blank=True, max_length=255, null=True)),
                ('NEGATIVE', models.CharField(blank=True, max_length=255, null=True)),
                ('sentiment_analysis_result', models.TextField(blank=True, null=True)),
                ('created_time', models.DateTimeField(default=datetime.datetime(2023, 12, 18, 13, 59, 21, 468848, tzinfo=datetime.timezone.utc))),
                ('website_data_cluster_obj', models.ManyToManyField(related_name='website_data_cluster_obj', to='newsgatherers.news_obj')),
                ('youtube_data_cluster_obj', models.ManyToManyField(related_name='youtube_data_cluster_obj', to='newsgatherers.news_obj')),
            ],
        ),
    ]
